import{_ as d,r as t,o as i,c as l,d as n,w as p,a as e,b as a,e as c}from"./app-0418676b.js";const h={},u=e("h1",{id:"快速开始",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#快速开始","aria-hidden":"true"},"#"),a(" 快速开始")],-1),_=e("p",null,"你可以选择线上尝试，也可以选择本地构建。",-1),m=e("h2",{id:"线上尝试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#线上尝试","aria-hidden":"true"},"#"),a(" 线上尝试")],-1),g=e("p",null,"浏览器里运行了基于 Halsp 的构建设置，不需要在机器上安装任何依赖",-1),v=e("p",null,[a("选择下面需要的环境和组件，点击 "),e("strong",null,"立即创建"),a(" 按钮即可在线尝试")],-1),b=e("br",null,null,-1),k={href:"https://quickstart.halsp.org",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/halsp/quickstart",target:"_blank",rel:"noopener noreferrer"},x=c(`<h2 id="本地构建" tabindex="-1"><a class="header-anchor" href="#本地构建" aria-hidden="true">#</a> 本地构建</h2><p>在命令行中运行下面语句</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm init halsp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),w={href:"https://www.npmjs.com/package/create-halsp",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"router",-1),N=e("code",null,"testing",-1),j=c(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>? Project name: halsp-project
? Select plugins 依赖注入 <span class="token punctuation">(</span>@halsp/inject<span class="token punctuation">)</span>, 路由 <span class="token punctuation">(</span>@halsp/router<span class="token punctuation">)</span>
? Pick the environment to run application: 原生 NodeJS 服务
? Pick the package manager to use when installing dependencies: Use NPM
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>create-halsp</code> 是 Halsp 的官方项目脚手架工具，由 <code>@halsp/cli</code> 自动生成，并且功能完全和 <code>@halsp/cli</code> 的 <code>halsp create</code> 命令相同。</p><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><p>在项目被创建后，就已经启动了</p><p>如果选择的插件包含 <code>swagger</code>，你将能看到 swagger 页面</p><p>如果选择的插件包含 <code>view</code> 或 <code>mva</code>，访问 <code>/user</code> 能看到一个简单的 html 页面</p><p>或者，能看到一个返回的 json 字符串</p><p>无论你选择的运行环境是云函数还是原生 node 服务，本地开发都是以 node 服务启动调试的，你可以在 <code>.halsprc.ts</code> 配置文件中的 <code>start</code> 节点修改启动参数，如端口、地址等。</p><h2 id="发布" tabindex="-1"><a class="header-anchor" href="#发布" aria-hidden="true">#</a> 发布</h2><p>当你准备将应用发布到生产环境时，请运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此命令会在 <code>dist</code> 文件夹中为你的应用创建一个生产环境的构建版本。</p>`,12);function S(C,P){const o=t("QuickStart"),r=t("ClientOnly"),s=t("ExternalLinkIcon");return i(),l("div",null,[u,_,m,g,v,n(r,null,{default:p(()=>[n(o)]),_:1}),b,e("p",null,[a("也可以跳转至单独的页面 "),e("a",k,[a("https://quickstart.halsp.org"),n(s)])]),e("p",null,[a("该线上尝试项目的仓库 "),e("a",f,[a("https://github.com/halsp/quickstart"),n(s)])]),x,e("p",null,[a("这一语句将会安装并执行 "),e("a",w,[a("create-halsp"),n(s)]),a("，你将会看到一些选择插件和环境的选项，根据你的需要选择对应的环境和插件如 "),q,a("、"),N,a(" 等。")]),j])}const B=d(h,[["render",S],["__file","quickstart.html.vue"]]);export{B as default};
